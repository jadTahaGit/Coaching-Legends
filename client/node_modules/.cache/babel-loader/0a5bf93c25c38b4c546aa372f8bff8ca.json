{"ast":null,"code":"var _jsxFileName = \"/Users/jadtaha/Desktop/react/coaching-legends/client/src/components/general/OutsideAlerter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./OutsideAlerter\";\nimport React, { useRef, useEffect } from \"react\";\n/**\n * Hook that alerts clicks outside of the passed ref\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useOutsideAlerter(ref, setSignInFormPopUp, setSignUpFormPopUp) {\n  _s();\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        if (ref.current.children[0].classList.contains(\"signUpForm\")) return setSignUpFormPopUp(false);else return setSignInFormPopUp(false);\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setSignInFormPopUp, setSignUpFormPopUp]);\n}\n/**\n * Component that alerts if you click outside of it\n */\n\n\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default function OutsideAlerter(props) {\n  _s2();\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.setSignInFormPopUp, props.setSignUpFormPopUp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(OutsideAlerter, \"kF1gJ+9qozGrx9T2BaxcGZVoPDQ=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = OutsideAlerter;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutsideAlerter\");","map":{"version":3,"sources":["/Users/jadtaha/Desktop/react/coaching-legends/client/src/components/general/OutsideAlerter.js"],"names":["React","useRef","useEffect","useOutsideAlerter","ref","setSignInFormPopUp","setSignUpFormPopUp","handleClickOutside","event","current","contains","target","children","classList","document","addEventListener","removeEventListener","OutsideAlerter","props","wrapperRef"],"mappings":";;;;AAAA,OAAO,kBAAP;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA;AACA;AACA;;;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,kBAAhC,EAAoDC,kBAApD,EAAwE;AAAA;;AACtEJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASK,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIJ,GAAG,CAACK,OAAJ,IAAe,CAACL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD,YAAIP,GAAG,CAACK,OAAJ,CAAYG,QAAZ,CAAqB,CAArB,EAAwBC,SAAxB,CAAkCH,QAAlC,CAA2C,YAA3C,CAAJ,EACE,OAAOJ,kBAAkB,CAAC,KAAD,CAAzB,CADF,KAEK,OAAOD,kBAAkB,CAAC,KAAD,CAAzB;AACN;AACF,KAVa,CAWd;;;AACAS,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACA,WAAO,MAAM;AACX;AACAO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACH,GAAD,EAAMC,kBAAN,EAA0BC,kBAA1B,CAjBM,CAAT;AAkBD;AAED;AACA;AACA;;;GAvBSH,iB;;AAwBT,eAAe,SAASc,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAMC,UAAU,GAAGlB,MAAM,CAAC,IAAD,CAAzB;AACAE,EAAAA,iBAAiB,CACfgB,UADe,EAEfD,KAAK,CAACb,kBAFS,EAGfa,KAAK,CAACZ,kBAHS,CAAjB;AAKA,sBAAO;AAAK,IAAA,GAAG,EAAEa,UAAV;AAAA,cAAuBD,KAAK,CAACN;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IARuBK,c;UAEtBd,iB;;;KAFsBc,c","sourcesContent":["import \"./OutsideAlerter\";\n\nimport React, { useRef, useEffect } from \"react\";\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref, setSignInFormPopUp, setSignUpFormPopUp) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        if (ref.current.children[0].classList.contains(\"signUpForm\"))\n          return setSignUpFormPopUp(false);\n        else return setSignInFormPopUp(false);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setSignInFormPopUp, setSignUpFormPopUp]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nexport default function OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(\n    wrapperRef,\n    props.setSignInFormPopUp,\n    props.setSignUpFormPopUp\n  );\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}