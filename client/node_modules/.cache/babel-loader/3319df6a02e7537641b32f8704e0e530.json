{"ast":null,"code":"var _jsxFileName = \"/Users/jadtaha/Desktop/react/coaching-legends/client/src/components/general/OutsideAlerter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = document.getElementById(\"App\");\n/**\n * Hook that alerts clicks outside of the passed ref\n */\n\nfunction useOutsideAlerter(ref, setSignInfromPopUp) {\n  _s();\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setSignInfromPopUp(false);\n        App.style.opacity = \"20%\";\n        console.log(App);\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setSignInfromPopUp]);\n}\n/**\n * Component that alerts if you click outside of it\n */\n\n\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default function OutsideAlerter(props) {\n  _s2();\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.setSignInfromPopUp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(OutsideAlerter, \"kF1gJ+9qozGrx9T2BaxcGZVoPDQ=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = OutsideAlerter;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutsideAlerter\");","map":{"version":3,"sources":["/Users/jadtaha/Desktop/react/coaching-legends/client/src/components/general/OutsideAlerter.js"],"names":["React","useRef","useEffect","App","document","getElementById","useOutsideAlerter","ref","setSignInfromPopUp","handleClickOutside","event","current","contains","target","style","opacity","console","log","addEventListener","removeEventListener","OutsideAlerter","props","wrapperRef","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AACA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,kBAAhC,EAAoD;AAAA;;AAClDN,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASO,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIH,GAAG,CAACI,OAAJ,IAAe,CAACJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDL,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAL,QAAAA,GAAG,CAACW,KAAJ,CAAUC,OAAV,GAAoB,KAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACD;AACF,KAVa,CAWd;;;AACAC,IAAAA,QAAQ,CAACc,gBAAT,CAA0B,WAA1B,EAAuCT,kBAAvC;AACA,WAAO,MAAM;AACX;AACAL,MAAAA,QAAQ,CAACe,mBAAT,CAA6B,WAA7B,EAA0CV,kBAA1C;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACF,GAAD,EAAMC,kBAAN,CAjBM,CAAT;AAkBD;AAED;AACA;AACA;;;GAvBSF,iB;;AAwBT,eAAe,SAASc,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAMC,UAAU,GAAGrB,MAAM,CAAC,IAAD,CAAzB;AACAK,EAAAA,iBAAiB,CAACgB,UAAD,EAAaD,KAAK,CAACb,kBAAnB,CAAjB;AACA,sBAAO;AAAK,IAAA,GAAG,EAAEc,UAAV;AAAA,cAAuBD,KAAK,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IAJuBH,c;UAEtBd,iB;;;KAFsBc,c","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nconst App = document.getElementById(\"App\");\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref, setSignInfromPopUp) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setSignInfromPopUp(false);\n        App.style.opacity = \"20%\";\n        console.log(App);\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setSignInfromPopUp]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nexport default function OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.setSignInfromPopUp);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}