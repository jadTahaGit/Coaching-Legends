{"ast":null,"code":"var _s = $RefreshSig$();\n\n// * Hook that alerts clicks outside of the passed ref\nconst useOutsideAlerter = _ref => {\n  _s();\n\n  let {\n    ref,\n    setSignInfromPopUp\n  } = _ref;\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        console.log(\"You clicked outside of me!\");\n        setSignInfromPopUp(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setSignInfromPopUp]);\n};\n\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useOutsideAlerter;","map":{"version":3,"sources":["/Users/jadtaha/Desktop/react/coaching-legends/client/src/components/general/Outsider.js"],"names":["useOutsideAlerter","ref","setSignInfromPopUp","useEffect","handleClickOutside","event","current","contains","target","console","log","document","addEventListener","removeEventListener"],"mappings":";;AAAA;AACA,MAAMA,iBAAiB,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAgC;AACzDC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,UAAIJ,GAAG,CAACK,OAAJ,IAAe,CAACL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAR,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AACF,KALD,CADc,CAOd;;;AACAS,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACA,WAAO,MAAM;AACX;AACAO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACD,KAHD;AAID,GAbQ,EAaN,CAACH,GAAD,EAAMC,kBAAN,CAbM,CAAT;AAcD,CAfD;;GAAMF,iB;;AAiBN,eAAeA,iBAAf","sourcesContent":["// * Hook that alerts clicks outside of the passed ref\nconst useOutsideAlerter = ({ ref, setSignInfromPopUp }) => {\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        console.log(\"You clicked outside of me!\");\n        setSignInfromPopUp(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, setSignInfromPopUp]);\n};\n\nexport default useOutsideAlerter;\n"]},"metadata":{},"sourceType":"module"}